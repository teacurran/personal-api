<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<parent>
		<artifactId>personal-api-bom</artifactId>
		<groupId>com.wirelust.personal-api</groupId>
		<version>1.0-SNAPSHOT</version>
	</parent>
	<modelVersion>4.0.0</modelVersion>

	<artifactId>personal-api</artifactId>
	<packaging>war</packaging>

	<dependencies>
		<dependency>
			<groupId>com.wirelust.personal-api.clients</groupId>
			<artifactId>fitbit</artifactId>
			<version>${project.version}</version>
		</dependency>

		<!--                       -->
		<!-- PROVIDED              -->
		<!--                       -->
		<dependency>
			<groupId>org.jboss.spec</groupId>
			<artifactId>jboss-javaee-7.0</artifactId>
			<scope>provided</scope>
			<type>pom</type>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jaxrs</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-cdi</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jackson2-provider</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-multipart-provider</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>${version.hibernate}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${version.hibernate}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-jpamodelgen</artifactId>
			<version>${version.hibernate}</version>
			<scope>provided</scope>
		</dependency>

		<!-- Compile -->
		<!-- DeltaSpike -->
		<dependency>
			<groupId>org.apache.deltaspike.core</groupId>
			<artifactId>deltaspike-core-api</artifactId>
			<version>${version.deltaspike}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.deltaspike.core</groupId>
			<artifactId>deltaspike-core-impl</artifactId>
			<version>${version.deltaspike}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.deltaspike.modules</groupId>
			<artifactId>deltaspike-jpa-module-api</artifactId>
			<version>${version.deltaspike}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.deltaspike.modules</groupId>
			<artifactId>deltaspike-jpa-module-impl</artifactId>
			<version>${version.deltaspike}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.deltaspike.modules</groupId>
			<artifactId>deltaspike-jsf-module-api</artifactId>
			<version>${version.deltaspike}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.deltaspike.modules</groupId>
			<artifactId>deltaspike-jsf-module-impl</artifactId>
			<version>${version.deltaspike}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.deltaspike.modules</groupId>
			<artifactId>deltaspike-data-module-api</artifactId>
			<version>${version.deltaspike}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.deltaspike.modules</groupId>
			<artifactId>deltaspike-data-module-impl</artifactId>
			<version>${version.deltaspike}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.deltaspike.modules</groupId>
			<artifactId>deltaspike-security-module-api</artifactId>
			<version>${version.deltaspike}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.deltaspike.modules</groupId>
			<artifactId>deltaspike-security-module-impl</artifactId>
			<version>${version.deltaspike}</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>net.java.dev.inflector</groupId>
			<artifactId>inflector</artifactId>
			<version>0.7.0</version>
			<scope>compile</scope>
		</dependency>

		<!-- Test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${version.junit}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.arquillian</groupId>
			<artifactId>arquillian-bom</artifactId>
			<version>${version.arquillian}</version>
			<scope>test</scope>
			<type>pom</type>
		</dependency>
		<dependency>
			<groupId>org.jboss.arquillian.junit</groupId>
			<artifactId>arquillian-junit-container</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.wildfly</groupId>
			<artifactId>wildfly-embedded</artifactId>
			<version>${version.wildfly}</version>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>
		<pluginManagement>
			<plugins>

				<plugin>
					<artifactId>maven-war-plugin</artifactId>
					<configuration>

						<failOnMissingWebXml>false</failOnMissingWebXml>

						<archive>
							<!-- Note, manifest not written to exploded directory.
							http://jira.codehaus.org/browse/MWAR-167
							-->
							<manifestEntries>
								<Specification-Title>${project.name}</Specification-Title>
								<Specification-Version>${project.version}</Specification-Version>
								<Implementation-Version>${build.number}</Implementation-Version>
								<Implementation-Build>${buildNumber}</Implementation-Build>
							</manifestEntries>
						</archive>
						<!--<warSourceExcludes>css/*,js/*,js/components/**/*</warSourceExcludes> -->
						<!-- We're only handling CSS files now via the wro4j plugin, makes JS debugging easier.-->
						<!--<warSourceExcludes>css/*</warSourceExcludes> -->
						<webappDirectory>${webapp.dir}</webappDirectory>
						<webResources>

							<resource>
								<directory>src/main/webapp</directory>
								<filtering>false</filtering>
								<excludes>
									<exclude>**/*.less</exclude>
									<exclude>**/*.html</exclude>
								</excludes>
							</resource>
							<resource>
								<directory>src/main/webapp</directory>
								<filtering>true</filtering>
								<includes>
									<include>**/*.html</include>
								</includes>
							</resource>
						</webResources>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>


		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId>
				<version>1.2</version>
				<executions>
					<execution>
						<phase>generate-resources</phase>
						<goals>
							<goal>create</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<timestampFormat>yyyyMMddHHmmssSSS</timestampFormat>
					<timestampPropertyName>releaseTimestamp</timestampPropertyName>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
					<compilerArguments>
						<processor>org.hibernate.jpamodelgen.JPAMetaModelEntityProcessor</processor>
					</compilerArguments>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>default</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>

		<profile>
			<id>arquillian-jboss-managed</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<dependencies>
				<dependency>
					<groupId>org.wildfly</groupId>
					<artifactId>wildfly-arquillian-container-embedded</artifactId>
					<version>${version.wildfly}</version>
					<scope>test</scope>
				</dependency>
			</dependencies>
			<build>
				<testResources>
					<testResource>
						<directory>src/test/resources</directory>
					</testResource>
					<testResource>
						<directory>src/test/resources-wildfly-embedded</directory>
					</testResource>
				</testResources>
				<plugins>


					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>2.17</version>
						<configuration>
							<!-- Fork every test because it will launch a separate AS instance -->
							<forkMode>always</forkMode>
							<systemPropertyVariables>
								<java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
								<!-- the maven dependency plugin will have already downloaded the server on /target -->
								<jboss.home>${project.basedir}/../../target/wildfly-${version.wildfly}</jboss.home>
								<module.path>${project.basedir}/../../target/wildfly-${version.wildfly}/modules
								</module.path>
							</systemPropertyVariables>
							<redirectTestOutputToFile>false</redirectTestOutputToFile>

							<systemProperties>

								<property>
									<name>java.util.logging.manager</name>
									<value>org.jboss.logmanager.LogManager</value>
								</property>

								<!--
								<systemProperty>
									<name>jboss.server.config.file.name</name>
									<value>src/deployment/test/jboss-personalapi.xml</value>
								</systemProperty>
								-->

								<systemProperty>
									<name>org.apache.deltaspike.ProjectStage</name>
									<value>UnitTest</value>
								</systemProperty>

							</systemProperties>
						</configuration>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<version>2.8</version>
						<executions>
							<execution>
								<id>unpack</id>
								<phase>process-test-classes</phase>
								<goals>
									<goal>unpack</goal>
								</goals>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>org.wildfly</groupId>
											<artifactId>wildfly-dist</artifactId>
											<version>${version.wildfly}</version>
											<type>zip</type>
											<overWrite>false</overWrite>
											<outputDirectory>../../target</outputDirectory>
										</artifactItem>
									</artifactItems>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>